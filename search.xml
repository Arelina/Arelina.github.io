<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[用css渐变实现菱形图像]]></title>
    <url>%2F2019%2F10%2F09%2F%E7%94%A8css%E6%B8%90%E5%8F%98%E5%AE%9E%E7%8E%B0%E8%8F%B1%E5%BD%A2%E5%9B%BE%E5%83%8F%2F</url>
    <content type="text"><![CDATA[用css渐变实现菱形图像 要求 单纯用html或 css实现下图效果 方法一 ： 分隔法 ​ 将一个div 沿对宽高的中点，分割成四个小的div，然后再每一个div中设置线性渐变 设置四个不同的角度，即可做出菱形 代码 123456789101112131415161718192021222324div:first-child &#123; background: -webkit-linear-gradient(-45deg,#99d4ff 50%, gray 50%); background: -o-linear-gradient(-45deg,#99d4ff 50%, gray 50%); background: -moz-linear-gradient(-45deg,#99d4ff 50%, gray 50%); background: linear-gradient(-45deg,#99d4ff 50%, gray 50%); &#125;.main div div:nth-child(2) &#123; background: -webkit-linear-gradient(45deg,#99d4ff 50%, gray 50%); background: -o-linear-gradient(45deg,#99d4ff 50%, gray 50%); background: -moz-linear-gradient(45deg,#99d4ff 50%, gray 50%); background: linear-gradient(45deg,#99d4ff 50%, gray 50%); &#125; .main div div:nth-child(4) &#123; background: -webkit-linear-gradient(135deg,#99d4ff 50%, gray 50%); background: -o-linear-gradient(135deg,#99d4ff 50%, gray 50%); background: -moz-linear-gradient(135deg,#99d4ff 50%, gray 50%); background: linear-gradient(135deg,#99d4ff 50%, gray 50%); &#125; .main div div:nth-child(3) &#123; background: -webkit-linear-gradient(-135deg,#99d4ff 50%, gray 50%); background: -o-linear-gradient(-135deg,#99d4ff 50%, gray 50%); background: -moz-linear-gradient(-135deg,#99d4ff 50%, gray 50%); background: linear-gradient(-135deg,#99d4ff 50%, gray 50%); &#125; 方法二 ： 设置伪类覆盖法 ​ 写一个div，然后设置对角的线性渐变，实现左上和右下角的灰色角和中间的青色部分，但是中间的会全部 覆盖。 ​ 所以 在给原来的div设置一个伪类 ：before，和这个div 同样大小 然后在另外两个角度设置线性渐变，然后他就会出现四个灰色的角，但是中间的颜色会全覆盖，如图 然后只要把中间的颜色设置成透明，就可以了。 实现代码如下 1234567891011121314&lt;style&gt; div &#123; width: 500px; height: 500px; background: linear-gradient(135deg,grey 25%,lightskyblue 25%, lightskyblue 75%,grey 75%) repeat; &#125; div:before &#123; width: 500px; height: 500px; display: block; content: ""; background: linear-gradient(45deg,grey 25%,transparent 25%, transparent 75%,grey 75%) repeat; &#125; &lt;/style&gt;]]></content>
  </entry>
  <entry>
    <title><![CDATA[Spring注解]]></title>
    <url>%2F2019%2F09%2F29%2FSpring%E6%B3%A8%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[Spring注解单纯注解方式 ​ base-package 为注解扫描的路径 1&lt;context:component-scan base-package="com.arelin"/&gt; 1234567@Component("userService")等同于 @Service("userService")，dao等等 再不用的层用不同的名字，好区分 但是意义相同 @Value("米饭")直接注入属性 @Resource(name = "userDao") 注入其他的bean,或者类 其他注解 1234@PostConstruct等同于init 为bean初始化时运行@PreDestroybean销毁时运行 注解和xml方式联合使用 在xml中 1&lt;context:annotation-config/&gt;&lt;bean id="productService" class="com.arelin.demo3.ProductService"/&gt;&lt;bean id="productDao" class="com.arelin.demo3.ProductDao"/&gt;&lt;bean id="cateDao" class="com.arelin.demo3.CateDao"/&gt; 只添加主类的bean,属性和依赖注入交给注解以@Resource的方式]]></content>
  </entry>
  <entry>
    <title><![CDATA[css定位]]></title>
    <url>%2F2019%2F09%2F29%2Fcss%E5%AE%9A%E4%BD%8D%2F</url>
    <content type="text"><![CDATA[CSS定位普通文档流==标准文档流 normal-flow ​ 块级元素和行内元素属性 position ​ 元素定位，层叠相关功能，核心模块 盒子模型的类型和尺寸 布局模型 定位模型 自然/静态/常规定位 static 不会受top,bottom等影响 外边距塌陷 margin 听比较大的 如果左右设置 auto，左右边距会自动扩大占满剩余宽度 绝对定位 absolute 使元素脱离常规流 找 设置定位的祖先元素进行绝对定位，如果没有则找body元素 lrtb如果设置为0 则对齐到最近的定位祖先元素的各边 margin:auto;则会上下左右居中 相对定位 relative 使是元素成为 containing-block 可定位的祖先元素 可以设置 上下左右 z-index ,相对于自身的定位 不会离开常规流 任何元素都可以设置relative 。他的绝对定位后代可以设置相对于设置相对定位元素进行移动 固定定位 fixed 相对于视口定位 不会随元素视口滚动而滚动 继承absolute特点 IE盒子模型 设置的宽高 为内容+padding的 宽高 弹出层设计 主体层 遮罩层 弹出层]]></content>
  </entry>
  <entry>
    <title><![CDATA[CSS世界读书笔记(一)]]></title>
    <url>%2F2019%2F09%2F27%2FCSS%E4%B8%96%E7%95%8C%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E4%B8%80%2F</url>
    <content type="text"><![CDATA[CSS世界读书笔记 （一）]]></content>
  </entry>
  <entry>
    <title><![CDATA[ByeSame]]></title>
    <url>%2F2019%2F09%2F25%2FByeSame%2F</url>
    <content type="text"><![CDATA[ByeSame百杉第一天]]></content>
  </entry>
  <entry>
    <title><![CDATA[myfirst]]></title>
    <url>%2F2019%2F08%2F31%2Fmyfirst%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F08%2F31%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
